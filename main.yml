---
- hosts: all

  vars_files:
    - default.config.yml

  vars_prompt:
    - name: myhostname
      prompt: "Whats the hostname?"
      private: no

  pre_tasks:
    - name: Include playbook configuration.
      include_vars: "{{ item }}"
      with_fileglob:
        - "{{ playbook_dir }}/config.yml"
      tags: ['always']

    - name: Install Rosetta 2
      ansible.builtin.shell: "/usr/sbin/softwareupdate --install-rosetta --agree-to-license"
      when: ansible_architecture == 'arm64'

  roles:
    - role: elliotweiser.osx-command-line-tools
    - role: geerlingguy.dotfiles
      when: configure_dotfiles
      tags: ['dotfiles']
    - role: geerlingguy.mac.homebrew
      tags: ['homebrew']
    - role: geerlingguy.mac.mas
      when: mas_installed_apps or mas_installed_app_ids
      tags: ['mas']
    - role: geerlingguy.mac.dock
      when: configure_dock
      tags: ['dock']

  tasks:
    - name: "Detect who am I"
      ansible.builtin.command: "whoami"
      register: whoami
      changed_when: whoami.rc != 0

    - name: "Set fact ansible_suer to {{ whoami.stdout }}"
      set_fact:
        ansible_user: "{{ whoami.stdout }}"

    - name: Check if this is a MacBook
      block:
        # https://apple.stackexchange.com/a/98089
        - name: "Get model information"
          ansible.builtin.shell: "curl https://support-sp.apple.com/sp/product?cc=$(system_profiler SPHardwareDataType | awk '/Serial/ {print $4}' | cut -c 9-)"
          register: SPHardwareDataType
          changed_when: SPHardwareDataType.rc != 0

        - name: "Set fact macbook if appropriate"
          set_fact:
            macbook: true
          when: "'MacBook' in SPHardwareDataType.stdout"

    - name: Check if this is a business or a private device
      block:
        - name: "Set fact myenv to business"
          set_fact:
            myenv: "business"
          when: myhostname is match("ws.*")

        - name: "Set fact myenv to private"
          set_fact:
            myenv: "private"
          when: not myhostname is match("ws.*")

    # - include_tasks: tasks/sudoers.yml
    #   when: configure_sudoers
    #   tags: ['sudoers']

    - import_tasks: tasks/terminal.yml
      when: configure_terminal
      tags: ['terminal']

    - import_tasks: tasks/various_software.yml
      when: various_software

    - import_tasks: tasks/osx.yml
      when: configure_osx
      tags: ['osx']

    - import_tasks: tasks/various-settings.yml
      when: configure_settings

    - import_tasks: tasks/vscode.yml
      when: configure_vscodium

    - import_tasks: tasks/extra-packages.yml
      tags: ['extra-packages']

    - import_tasks: tasks/business-settings.yml
      when: (configure_settings) and (myenv == "business")
      tags: ['business']

    - name: Run configured post-provision ansible task files.
      include_tasks: "{{ outer_item }}"
      loop_control:
        loop_var: outer_item
      with_fileglob: "{{ post_provision_tasks|default(omit) }}"
      tags: ['post']
