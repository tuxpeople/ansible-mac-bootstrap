---
# Custom Terminal theme.
- name: Get current Terminal profile.
  command: defaults read com.apple.terminal 'Default Window Settings'
  register: terminal_theme
  changed_when: false
  check_mode: false

- name: Ensure custom Terminal profile is added.
  copy:
    src: files/terminal/JJG-Term.terminal
    dest: /tmp/JJG-Term.terminal
  changed_when: false
  when: "'JJG-Term' not in terminal_theme.stdout"

- name: Ensure custom Terminal profile is added.
  command: open /tmp/JJG-Term.terminal
  changed_when: false
  when: "'JJG-Term' not in terminal_theme.stdout"

- name: Ensure custom Terminal profile is added.
  command: open /tmp/JJG-Term.terminal
  changed_when: false

- name: Ensure custom Terminal Solarized Dark theme is added.
  shell: open "files/terminal/Solarized Dark xterm-256color.terminal"
  changed_when: false

# TODO: This doesn't work in Yosemite. Consider a different solution?
- name: Ensure custom Terminal profile is set as default.
  command: "{{ item }}"
  with_items:
    - defaults write com.apple.terminal 'Default Window Settings' 'Solarized Dark xterm-256color'
    - defaults write com.apple.terminal 'Startup Window Settings' 'Solarized Dark xterm-256color'
  changed_when: false
  when: "'Solarized Dark xterm-256color' not in terminal_theme.stdout"

- name: Kill cfprefsd
  shell: killall cfprefsd
  changed_when: false

- name: Getting Users Homedir
  user:
    name: "{{ ansible_user }}"
    state: present
  register: this_user_registered

- name: Copy iTerm2 setting
  copy:
    src: files/iterm/com.googlecode.iterm2.plist
    dest: "{{ this_user_registered.home }}/Library/Preferences/com.googlecode.iterm2.plist"
    owner: "{{ ansible_user }}"

- name: Remove extended attributes from iTerm2
  shell: xattr -c /Applications/iTerm.app
  changed_when: false
  ignore_errors: true

- name: Ensure custom iTerm Solarized Dark theme is added.
  shell: open "files/iterm/Solarized Dark.itermcolors"
  changed_when: false
  
- name: Creates ssh directory
  file:
    path: "{{ this_user_registered.home }}/.ssh"
    state: directory

- name: Ensure ssh config is a link to nextcloud
  file:
    src: "{{ this_user_registered.home }}/Nextcloud/Allgemein/dotfiles/ssh_config"
    dest: "{{ this_user_registered.home }}/.ssh/config"
    owner: "{{ ansible_user }}"
    state: link
    force: yes
